{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Vaibhav Mishra\\\\Desktop\\\\chat-module-project\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport axios from 'axios';\nimport { io } from 'socket.io-client';\n\n// ✅ Basic configuration\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000';\nconst MY_USER_ID = parseInt(process.env.REACT_APP_MY_USER_ID || '10', 10); // ← make sure matches your Supabase user ID\n\nexport default function App() {\n  _s();\n  const [users, setUsers] = useState([]);\n  const [search, setSearch] = useState('');\n  const [selectedUser, setSelectedUser] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const [attachment, setAttachment] = useState(null);\n  const [uploading, setUploading] = useState(false);\n  const [uploadProgress, setUploadProgress] = useState(0);\n  const socketRef = useRef(null);\n  const messagesRef = useRef(null);\n\n  // ✅ Socket setup\n  useEffect(() => {\n    if (!socketRef.current) {\n      socketRef.current = io(API_URL, {\n        transports: ['websocket']\n      });\n      socketRef.current.on('connect', () => {\n        socketRef.current.emit('join', {\n          userId: MY_USER_ID\n        });\n      });\n      socketRef.current.on('new_message', msg => {\n        const otherId = msg.sender_id === MY_USER_ID ? msg.receiver_id : msg.sender_id;\n        setMessages(prev => {\n          if (selectedUser && otherId === selectedUser.id) {\n            const alreadyExists = prev.some(m => m.id === msg.id);\n            return alreadyExists ? prev : [...prev, msg];\n          }\n          return prev;\n        });\n      });\n    }\n    return () => {\n      var _socketRef$current;\n      (_socketRef$current = socketRef.current) === null || _socketRef$current === void 0 ? void 0 : _socketRef$current.off('new_message');\n    };\n  }, [selectedUser]);\n\n  // ✅ Scroll to bottom when messages update\n  useEffect(() => {\n    if (messagesRef.current) {\n      messagesRef.current.scrollTop = messagesRef.current.scrollHeight;\n    }\n  }, [messages]);\n\n  // ✅ Fetch users\n  async function fetchUsers(q) {\n    try {\n      const res = await axios.get(`${API_URL}/api/users`, {\n        params: {\n          search: q\n        }\n      });\n      setUsers(res.data);\n    } catch (err) {\n      console.error('Failed to fetch users', err);\n    }\n  }\n  useEffect(() => {\n    fetchUsers('');\n  }, []);\n\n  // ✅ Open conversation\n  async function openConversation(user) {\n    setSelectedUser(user);\n    setMessages([]);\n    try {\n      const res = await axios.get(`${API_URL}/api/messages/${user.id}`, {\n        params: {\n          myUserId: MY_USER_ID\n        }\n      });\n      setMessages(res.data);\n    } catch (err) {\n      console.error('Failed to fetch conversation', err);\n    }\n  }\n\n  // ✅ File Upload to backend (Supabase integrated)\n  async function handleFileUpload(e) {\n    const file = e.target.files[0];\n    if (!file) return;\n    const formData = new FormData();\n    formData.append('file', file);\n    try {\n      setUploading(true);\n      const res = await axios.post(`${API_URL}/api/upload`, formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        },\n        onUploadProgress: progressEvent => {\n          const percent = Math.round(progressEvent.loaded * 100 / progressEvent.total);\n          setUploadProgress(percent);\n        }\n      });\n      setAttachment({\n        url: res.data.url,\n        name: file.name\n      });\n      setUploading(false);\n      setUploadProgress(0);\n    } catch (err) {\n      console.error('File upload failed:', err);\n      setUploading(false);\n    }\n  }\n\n  // ✅ Send message\n  async function sendMessage() {\n    if (!selectedUser || !input.trim() && !attachment) return;\n    const payload = {\n      sender_id: MY_USER_ID,\n      receiver_id: selectedUser.id,\n      content: input.trim(),\n      attachment_url: attachment ? attachment.url : null\n    };\n    try {\n      await axios.post(`${API_URL}/api/messages`, payload);\n      setMessages(prev => [...prev, {\n        id: Date.now(),\n        sender_id: MY_USER_ID,\n        receiver_id: selectedUser.id,\n        content: input.trim(),\n        attachment_url: attachment ? attachment.url : null,\n        timestamp: new Date().toISOString()\n      }]);\n      setInput('');\n      setAttachment(null);\n    } catch (err) {\n      console.error('Failed to send message', err);\n    }\n  }\n\n  // ✅ Format time\n  function formatTime(ts) {\n    const date = new Date(ts);\n    return date.toLocaleTimeString([], {\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Members\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Search members...\",\n        value: search,\n        onChange: e => {\n          setSearch(e.target.value);\n          fetchUsers(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: 12\n        },\n        children: users.map(u => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `user-item ${(selectedUser === null || selectedUser === void 0 ? void 0 : selectedUser.id) === u.id ? 'active' : ''}`,\n          onClick: () => openConversation(u),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: u.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 20\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              fontSize: 12,\n              color: '#6b7280'\n            },\n            children: u.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 15\n          }, this)]\n        }, u.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-header\",\n        children: selectedUser ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: selectedUser.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              fontSize: 12,\n              color: '#6b7280'\n            },\n            children: selectedUser.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Select a user to start chat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"messages\",\n        ref: messagesRef,\n        children: messages.map(m => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `message ${m.sender_id === MY_USER_ID ? 'me' : 'them'}`,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bubble\",\n            children: [m.content && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text\",\n              children: m.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 31\n            }, this), m.attachment_url && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: m.attachment_url.match(/\\.(jpg|jpeg|png|gif|webp)$/i) ? /*#__PURE__*/_jsxDEV(\"img\", {\n                src: m.attachment_url,\n                alt: \"attachment\",\n                className: \"image-attachment\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 23\n              }, this) : /*#__PURE__*/_jsxDEV(\"a\", {\n                href: m.attachment_url,\n                target: \"_blank\",\n                rel: \"noopener noreferrer\",\n                className: \"file-bubble\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"file-icon\",\n                  children: \"\\uD83D\\uDCC4\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 201,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"file-name\",\n                  children: [m.attachment_url.split('/').pop().substring(0, 25), \"...\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 202,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 23\n              }, this)\n            }, void 0, false), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"timestamp\",\n              children: formatTime(m.timestamp)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 15\n          }, this)\n        }, m.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this), uploading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"upload-progress\",\n        children: [\"Uploading... \", uploadProgress, \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"file-input\",\n          className: \"attach-label\",\n          children: \"\\uD83D\\uDCCE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"file-input\",\n          type: \"file\",\n          style: {\n            display: 'none'\n          },\n          onChange: handleFileUpload\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"Type a message...\",\n          value: input,\n          onChange: e => setInput(e.target.value),\n          onKeyDown: e => {\n            if (e.key === 'Enter') sendMessage();\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn\",\n          onClick: sendMessage,\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 146,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"bJHBnqhb/yY5CSSaGsM7GEJfIu8=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","useRef","axios","io","jsxDEV","_jsxDEV","Fragment","_Fragment","API_URL","process","env","REACT_APP_API_URL","MY_USER_ID","parseInt","REACT_APP_MY_USER_ID","App","_s","users","setUsers","search","setSearch","selectedUser","setSelectedUser","messages","setMessages","input","setInput","attachment","setAttachment","uploading","setUploading","uploadProgress","setUploadProgress","socketRef","messagesRef","current","transports","on","emit","userId","msg","otherId","sender_id","receiver_id","prev","id","alreadyExists","some","m","_socketRef$current","off","scrollTop","scrollHeight","fetchUsers","q","res","get","params","data","err","console","error","openConversation","user","myUserId","handleFileUpload","e","file","target","files","formData","FormData","append","post","headers","onUploadProgress","progressEvent","percent","Math","round","loaded","total","url","name","sendMessage","trim","payload","content","attachment_url","Date","now","timestamp","toISOString","formatTime","ts","date","toLocaleTimeString","hour","minute","className","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","value","onChange","style","marginTop","map","u","onClick","fontSize","color","email","ref","match","src","alt","href","rel","split","pop","substring","htmlFor","type","display","onKeyDown","key","_c","$RefreshReg$"],"sources":["C:/Users/Vaibhav Mishra/Desktop/chat-module-project/client/src/App.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\nimport axios from 'axios';\nimport { io } from 'socket.io-client';\n\n// ✅ Basic configuration\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000';\nconst MY_USER_ID = parseInt(process.env.REACT_APP_MY_USER_ID || '10', 10); // ← make sure matches your Supabase user ID\n\nexport default function App() {\n  const [users, setUsers] = useState([]);\n  const [search, setSearch] = useState('');\n  const [selectedUser, setSelectedUser] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const [attachment, setAttachment] = useState(null);\n  const [uploading, setUploading] = useState(false);\n  const [uploadProgress, setUploadProgress] = useState(0);\n  const socketRef = useRef(null);\n  const messagesRef = useRef(null);\n\n  // ✅ Socket setup\n  useEffect(() => {\n    if (!socketRef.current) {\n      socketRef.current = io(API_URL, { transports: ['websocket'] });\n\n      socketRef.current.on('connect', () => {\n        socketRef.current.emit('join', { userId: MY_USER_ID });\n      });\n\n      socketRef.current.on('new_message', (msg) => {\n        const otherId = msg.sender_id === MY_USER_ID ? msg.receiver_id : msg.sender_id;\n        setMessages((prev) => {\n          if (selectedUser && otherId === selectedUser.id) {\n            const alreadyExists = prev.some((m) => m.id === msg.id);\n            return alreadyExists ? prev : [...prev, msg];\n          }\n          return prev;\n        });\n      });\n    }\n\n    return () => {\n      socketRef.current?.off('new_message');\n    };\n  }, [selectedUser]);\n\n  // ✅ Scroll to bottom when messages update\n  useEffect(() => {\n    if (messagesRef.current) {\n      messagesRef.current.scrollTop = messagesRef.current.scrollHeight;\n    }\n  }, [messages]);\n\n  // ✅ Fetch users\n  async function fetchUsers(q) {\n    try {\n      const res = await axios.get(`${API_URL}/api/users`, { params: { search: q } });\n      setUsers(res.data);\n    } catch (err) {\n      console.error('Failed to fetch users', err);\n    }\n  }\n\n  useEffect(() => {\n    fetchUsers('');\n  }, []);\n\n  // ✅ Open conversation\n  async function openConversation(user) {\n    setSelectedUser(user);\n    setMessages([]);\n    try {\n      const res = await axios.get(`${API_URL}/api/messages/${user.id}`, {\n        params: { myUserId: MY_USER_ID },\n      });\n      setMessages(res.data);\n    } catch (err) {\n      console.error('Failed to fetch conversation', err);\n    }\n  }\n\n  // ✅ File Upload to backend (Supabase integrated)\n  async function handleFileUpload(e) {\n    const file = e.target.files[0];\n    if (!file) return;\n\n    const formData = new FormData();\n    formData.append('file', file);\n\n    try {\n      setUploading(true);\n      const res = await axios.post(`${API_URL}/api/upload`, formData, {\n        headers: { 'Content-Type': 'multipart/form-data' },\n        onUploadProgress: (progressEvent) => {\n          const percent = Math.round((progressEvent.loaded * 100) / progressEvent.total);\n          setUploadProgress(percent);\n        },\n      });\n      setAttachment({ url: res.data.url, name: file.name });\n      setUploading(false);\n      setUploadProgress(0);\n    } catch (err) {\n      console.error('File upload failed:', err);\n      setUploading(false);\n    }\n  }\n\n  // ✅ Send message\n  async function sendMessage() {\n    if (!selectedUser || (!input.trim() && !attachment)) return;\n\n    const payload = {\n      sender_id: MY_USER_ID,\n      receiver_id: selectedUser.id,\n      content: input.trim(),\n      attachment_url: attachment ? attachment.url : null,\n    };\n\n    try {\n      await axios.post(`${API_URL}/api/messages`, payload);\n      setMessages((prev) => [\n        ...prev,\n        {\n          id: Date.now(),\n          sender_id: MY_USER_ID,\n          receiver_id: selectedUser.id,\n          content: input.trim(),\n          attachment_url: attachment ? attachment.url : null,\n          timestamp: new Date().toISOString(),\n        },\n      ]);\n      setInput('');\n      setAttachment(null);\n    } catch (err) {\n      console.error('Failed to send message', err);\n    }\n  }\n\n  // ✅ Format time\n  function formatTime(ts) {\n    const date = new Date(ts);\n    return date.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\n  }\n\n  return (\n    <div className=\"app\">\n      {/* --- Sidebar --- */}\n      <div className=\"sidebar\">\n        <h3>Members</h3>\n        <input\n          placeholder=\"Search members...\"\n          value={search}\n          onChange={(e) => {\n            setSearch(e.target.value);\n            fetchUsers(e.target.value);\n          }}\n        />\n        <div style={{ marginTop: 12 }}>\n          {users.map((u) => (\n            <div\n              key={u.id}\n              className={`user-item ${selectedUser?.id === u.id ? 'active' : ''}`}\n              onClick={() => openConversation(u)}\n            >\n              <div><strong>{u.name}</strong></div>\n              <div style={{ fontSize: 12, color: '#6b7280' }}>{u.email}</div>\n            </div>\n          ))}\n        </div>\n      </div>\n\n      {/* --- Chat --- */}\n      <div className=\"chat\">\n        {/* Chat header */}\n        <div className=\"chat-header\">\n          {selectedUser ? (\n            <div>\n              <strong>{selectedUser.name}</strong>\n              <div style={{ fontSize: 12, color: '#6b7280' }}>{selectedUser.email}</div>\n            </div>\n          ) : (\n            <div>Select a user to start chat</div>\n          )}\n        </div>\n\n        {/* Messages */}\n        <div className=\"messages\" ref={messagesRef}>\n          {messages.map((m) => (\n            <div key={m.id} className={`message ${m.sender_id === MY_USER_ID ? 'me' : 'them'}`}>\n              <div className=\"bubble\">\n                {/* Message Text */}\n                {m.content && <div className=\"text\">{m.content}</div>}\n\n                {/* Attachments */}\n                {m.attachment_url && (\n                  <>\n                    {m.attachment_url.match(/\\.(jpg|jpeg|png|gif|webp)$/i) ? (\n                      <img src={m.attachment_url} alt=\"attachment\" className=\"image-attachment\" />\n                    ) : (\n                      <a href={m.attachment_url} target=\"_blank\" rel=\"noopener noreferrer\" className=\"file-bubble\">\n                        <span className=\"file-icon\">📄</span>\n                        <span className=\"file-name\">\n                          {m.attachment_url.split('/').pop().substring(0, 25)}...\n                        </span>\n                      </a>\n                    )}\n                  </>\n                )}\n\n                {/* Timestamp */}\n                <div className=\"timestamp\">{formatTime(m.timestamp)}</div>\n              </div>\n            </div>\n          ))}\n        </div>\n\n        {/* Uploading progress */}\n        {uploading && (\n          <div className=\"upload-progress\">\n            Uploading... {uploadProgress}%\n          </div>\n        )}\n\n        {/* Input row */}\n        <div className=\"input-row\">\n          <label htmlFor=\"file-input\" className=\"attach-label\">📎</label>\n          <input id=\"file-input\" type=\"file\" style={{ display: 'none' }} onChange={handleFileUpload} />\n\n          <input\n            placeholder=\"Type a message...\"\n            value={input}\n            onChange={(e) => setInput(e.target.value)}\n            onKeyDown={(e) => {\n              if (e.key === 'Enter') sendMessage();\n            }}\n          />\n          <button className=\"btn\" onClick={sendMessage}>Send</button>\n        </div>\n      </div>\n    </div>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}