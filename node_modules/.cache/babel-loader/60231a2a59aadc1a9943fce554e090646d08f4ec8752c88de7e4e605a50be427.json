{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Vaibhav Mishra\\\\Desktop\\\\chat-module-project\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport axios from 'axios';\nimport { io } from 'socket.io-client';\n\n// Basic configuration via environment variables:\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000';\n// For demo purposes the client uses a fixed user id. In real integration, the main app provides the logged in user's id.\nconst MY_USER_ID = parseInt(process.env.REACT_APP_MY_USER_ID || '1', 10);\nexport default function App() {\n  _s();\n  const [users, setUsers] = useState([]);\n  const [search, setSearch] = useState('');\n  const [selectedUser, setSelectedUser] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const socketRef = useRef(null);\n  const messagesRef = useRef(null);\n  useEffect(() => {\n    // initial user search\n    fetchUsers('');\n    // Setup socket connection\n    socketRef.current = io(API_URL, {\n      transports: ['websocket']\n    });\n    socketRef.current.on('connect', () => {\n      // register this client as user_<MY_USER_ID>\n      socketRef.current.emit('join', {\n        userId: MY_USER_ID\n      });\n    });\n    socketRef.current.on('new_message', msg => {\n      // If the message belongs to currently open conversation, append it.\n      const otherId = msg.sender_id === MY_USER_ID ? msg.receiver_id : msg.sender_id;\n      if (selectedUser && otherId === selectedUser.id) {\n        setMessages(prev => [...prev, msg]);\n      }\n    });\n    return () => {\n      socketRef.current && socketRef.current.disconnect();\n    };\n  }, [selectedUser]); // we include selectedUser to allow live updates when switching conversations\n\n  useEffect(() => {\n    // scroll to bottom when messages change\n    if (messagesRef.current) {\n      messagesRef.current.scrollTop = messagesRef.current.scrollHeight;\n    }\n  }, [messages]);\n  async function fetchUsers(q) {\n    try {\n      const res = await axios.get(`${API_URL}/api/users`, {\n        params: {\n          search: q\n        }\n      });\n      setUsers(res.data);\n    } catch (err) {\n      console.error('Failed to fetch users', err);\n    }\n  }\n  async function openConversation(user) {\n    setSelectedUser(user);\n    setMessages([]);\n    try {\n      const res = await axios.get(`${API_URL}/api/messages/${user.id}`, {\n        params: {\n          myUserId: MY_USER_ID\n        }\n      });\n      setMessages(res.data);\n    } catch (err) {\n      console.error('Failed to fetch conversation', err);\n    }\n  }\n  async function sendMessage() {\n    if (!selectedUser || !input.trim()) return;\n    const payload = {\n      sender_id: MY_USER_ID,\n      receiver_id: selectedUser.id,\n      content: input.trim()\n    };\n    try {\n      await axios.post(`${API_URL}/api/messages`, payload);\n      // optimistic UI - push message locally\n      setMessages(prev => [...prev, {\n        id: Date.now(),\n        sender_id: MY_USER_ID,\n        receiver_id: selectedUser.id,\n        content: input.trim(),\n        timestamp: new Date().toISOString()\n      }]);\n      setInput('');\n    } catch (err) {\n      console.error('Failed to send message', err);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Members\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Search members...\",\n        value: search,\n        onChange: e => {\n          setSearch(e.target.value);\n          fetchUsers(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: 12\n        },\n        children: users.map(u => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-item\",\n          onClick: () => openConversation(u),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: u.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 20\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              fontSize: 12,\n              color: '#6b7280'\n            },\n            children: u.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 15\n          }, this)]\n        }, u.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          padding: 16,\n          borderBottom: '1px solid #e5e7eb',\n          background: '#fff'\n        },\n        children: selectedUser ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: selectedUser.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              fontSize: 12,\n              color: '#6b7280'\n            },\n            children: selectedUser.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Select a user to start chat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"messages\",\n        ref: messagesRef,\n        children: messages.map(m => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `message ${m.sender_id === MY_USER_ID ? 'me' : 'them'}`,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              fontSize: 14\n            },\n            children: m.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              fontSize: 11,\n              color: '#6b7280',\n              marginTop: 6\n            },\n            children: new Date(m.timestamp).toLocaleString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 15\n          }, this)]\n        }, m.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"Type a message...\",\n          value: input,\n          onChange: e => setInput(e.target.value),\n          onKeyDown: e => {\n            if (e.key === 'Enter') sendMessage();\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn\",\n          onClick: sendMessage,\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"FJ/Qg9EYL8JHT2FcMFYn7+cXjJI=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","useRef","axios","io","jsxDEV","_jsxDEV","API_URL","process","env","REACT_APP_API_URL","MY_USER_ID","parseInt","REACT_APP_MY_USER_ID","App","_s","users","setUsers","search","setSearch","selectedUser","setSelectedUser","messages","setMessages","input","setInput","socketRef","messagesRef","fetchUsers","current","transports","on","emit","userId","msg","otherId","sender_id","receiver_id","id","prev","disconnect","scrollTop","scrollHeight","q","res","get","params","data","err","console","error","openConversation","user","myUserId","sendMessage","trim","payload","content","post","Date","now","timestamp","toISOString","className","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","value","onChange","e","target","style","marginTop","map","u","onClick","name","fontSize","color","email","padding","borderBottom","background","ref","m","toLocaleString","onKeyDown","key","_c","$RefreshReg$"],"sources":["C:/Users/Vaibhav Mishra/Desktop/chat-module-project/client/src/App.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\nimport axios from 'axios';\nimport { io } from 'socket.io-client';\n\n// Basic configuration via environment variables:\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000';\n// For demo purposes the client uses a fixed user id. In real integration, the main app provides the logged in user's id.\nconst MY_USER_ID = parseInt(process.env.REACT_APP_MY_USER_ID || '1', 10);\n\nexport default function App() {\n  const [users, setUsers] = useState([]);\n  const [search, setSearch] = useState('');\n  const [selectedUser, setSelectedUser] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const socketRef = useRef(null);\n  const messagesRef = useRef(null);\n\n  useEffect(() => {\n    // initial user search\n    fetchUsers('');\n    // Setup socket connection\n    socketRef.current = io(API_URL, { transports: ['websocket'] });\n    socketRef.current.on('connect', () => {\n      // register this client as user_<MY_USER_ID>\n      socketRef.current.emit('join', { userId: MY_USER_ID });\n    });\n\n    socketRef.current.on('new_message', (msg) => {\n      // If the message belongs to currently open conversation, append it.\n      const otherId = (msg.sender_id === MY_USER_ID) ? msg.receiver_id : msg.sender_id;\n      if (selectedUser && otherId === selectedUser.id) {\n        setMessages((prev) => [...prev, msg]);\n      }\n    });\n\n    return () => {\n      socketRef.current && socketRef.current.disconnect();\n    };\n  }, [selectedUser]); // we include selectedUser to allow live updates when switching conversations\n\n  useEffect(() => {\n    // scroll to bottom when messages change\n    if (messagesRef.current) {\n      messagesRef.current.scrollTop = messagesRef.current.scrollHeight;\n    }\n  }, [messages]);\n\n  async function fetchUsers(q) {\n    try {\n      const res = await axios.get(`${API_URL}/api/users`, { params: { search: q } });\n      setUsers(res.data);\n    } catch (err) {\n      console.error('Failed to fetch users', err);\n    }\n  }\n\n  async function openConversation(user) {\n    setSelectedUser(user);\n    setMessages([]);\n    try {\n      const res = await axios.get(`${API_URL}/api/messages/${user.id}`, { params: { myUserId: MY_USER_ID } });\n      setMessages(res.data);\n    } catch (err) {\n      console.error('Failed to fetch conversation', err);\n    }\n  }\n\n  async function sendMessage() {\n    if (!selectedUser || !input.trim()) return;\n    const payload = {\n      sender_id: MY_USER_ID,\n      receiver_id: selectedUser.id,\n      content: input.trim()\n    };\n    try {\n      await axios.post(`${API_URL}/api/messages`, payload);\n      // optimistic UI - push message locally\n      setMessages((prev) => [...prev, {\n        id: Date.now(),\n        sender_id: MY_USER_ID,\n        receiver_id: selectedUser.id,\n        content: input.trim(),\n        timestamp: new Date().toISOString()\n      }]);\n      setInput('');\n    } catch (err) {\n      console.error('Failed to send message', err);\n    }\n  }\n\n  return (\n    <div className=\"app\">\n      <div className=\"sidebar\">\n        <h3>Members</h3>\n        <input\n          placeholder=\"Search members...\"\n          value={search}\n          onChange={(e) => { setSearch(e.target.value); fetchUsers(e.target.value); }}\n        />\n        <div style={{ marginTop: 12 }}>\n          {users.map(u => (\n            <div key={u.id} className=\"user-item\" onClick={() => openConversation(u)}>\n              <div><strong>{u.name}</strong></div>\n              <div style={{ fontSize: 12, color: '#6b7280' }}>{u.email}</div>\n            </div>\n          ))}\n        </div>\n      </div>\n\n      <div className=\"chat\">\n        <div style={{ padding: 16, borderBottom: '1px solid #e5e7eb', background: '#fff' }}>\n          {selectedUser ? (\n            <div>\n              <strong>{selectedUser.name}</strong>\n              <div style={{ fontSize: 12, color: '#6b7280' }}>{selectedUser.email}</div>\n            </div>\n          ) : (\n            <div>Select a user to start chat</div>\n          )}\n        </div>\n\n        <div className=\"messages\" ref={messagesRef}>\n          {messages.map(m => (\n            <div key={m.id} className={`message ${m.sender_id === MY_USER_ID ? 'me' : 'them'}`}>\n              <div style={{ fontSize: 14 }}>{m.content}</div>\n              <div style={{ fontSize: 11, color: '#6b7280', marginTop:6 }}>{new Date(m.timestamp).toLocaleString()}</div>\n            </div>\n          ))}\n        </div>\n\n        <div className=\"input-row\">\n          <input placeholder=\"Type a message...\" value={input} onChange={(e) => setInput(e.target.value)} onKeyDown={(e)=>{ if(e.key === 'Enter') sendMessage(); }} />\n          <button className=\"btn\" onClick={sendMessage}>Send</button>\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}